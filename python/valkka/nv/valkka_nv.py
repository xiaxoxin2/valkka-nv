# This file was automatically generated by SWIG (http://www.swig.org).
# Version 4.0.1
#
# Do not make changes to this file unless you know what you are doing--modify
# the SWIG interface file instead.

from sys import version_info as _swig_python_version_info
if _swig_python_version_info < (2, 7, 0):
    raise RuntimeError("Python 2.7 or later required")

# Import the low-level C/C++ module
if __package__ or "." in __name__:
    from . import _valkka_nv
else:
    import _valkka_nv

try:
    import builtins as __builtin__
except ImportError:
    import __builtin__

def _swig_repr(self):
    try:
        strthis = "proxy of " + self.this.__repr__()
    except __builtin__.Exception:
        strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)


def _swig_setattr_nondynamic_instance_variable(set):
    def set_instance_attr(self, name, value):
        if name == "thisown":
            self.this.own(value)
        elif name == "this":
            set(self, name, value)
        elif hasattr(self, name) and isinstance(getattr(type(self), name), property):
            set(self, name, value)
        else:
            raise AttributeError("You cannot add instance attributes to %s" % self)
    return set_instance_attr


def _swig_setattr_nondynamic_class_variable(set):
    def set_class_attr(cls, name, value):
        if hasattr(cls, name) and not isinstance(getattr(cls, name), property):
            set(cls, name, value)
        else:
            raise AttributeError("You cannot add class attributes to %s" % cls)
    return set_class_attr


def _swig_add_metaclass(metaclass):
    """Class decorator for adding a metaclass to a SWIG wrapped class - a slimmed down version of six.add_metaclass"""
    def wrapper(cls):
        return metaclass(cls.__name__, cls.__bases__, cls.__dict__.copy())
    return wrapper


class _SwigNonDynamicMeta(type):
    """Meta class to enforce nondynamic attributes (no new attributes) for a class"""
    __setattr__ = _swig_setattr_nondynamic_class_variable(type.__setattr__)


from valkka import core 
class FrameFilter(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __swig_destroy__ = _valkka_nv.delete_FrameFilter

# Register FrameFilter in _valkka_nv:
_valkka_nv.FrameFilter_swigregister(FrameFilter)

class DummyFrameFilter(FrameFilter):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, name, verbose=True, next=None):
        _valkka_nv.DummyFrameFilter_swiginit(self, _valkka_nv.new_DummyFrameFilter(name, verbose, next))
    __swig_destroy__ = _valkka_nv.delete_DummyFrameFilter

# Register DummyFrameFilter in _valkka_nv:
_valkka_nv.DummyFrameFilter_swigregister(DummyFrameFilter)

class InfoFrameFilter(FrameFilter):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, name, next=None):
        _valkka_nv.InfoFrameFilter_swiginit(self, _valkka_nv.new_InfoFrameFilter(name, next))
    __swig_destroy__ = _valkka_nv.delete_InfoFrameFilter

# Register InfoFrameFilter in _valkka_nv:
_valkka_nv.InfoFrameFilter_swigregister(InfoFrameFilter)

class BriefInfoFrameFilter(FrameFilter):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, name, next=None):
        _valkka_nv.BriefInfoFrameFilter_swiginit(self, _valkka_nv.new_BriefInfoFrameFilter(name, next))
    __swig_destroy__ = _valkka_nv.delete_BriefInfoFrameFilter

# Register BriefInfoFrameFilter in _valkka_nv:
_valkka_nv.BriefInfoFrameFilter_swigregister(BriefInfoFrameFilter)

class ThreadSafeFrameFilter(FrameFilter):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, name, next=None):
        _valkka_nv.ThreadSafeFrameFilter_swiginit(self, _valkka_nv.new_ThreadSafeFrameFilter(name, next))
    __swig_destroy__ = _valkka_nv.delete_ThreadSafeFrameFilter

# Register ThreadSafeFrameFilter in _valkka_nv:
_valkka_nv.ThreadSafeFrameFilter_swigregister(ThreadSafeFrameFilter)

class ForkFrameFilter(FrameFilter):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, name, next=None, next2=None):
        _valkka_nv.ForkFrameFilter_swiginit(self, _valkka_nv.new_ForkFrameFilter(name, next, next2))
    __swig_destroy__ = _valkka_nv.delete_ForkFrameFilter

# Register ForkFrameFilter in _valkka_nv:
_valkka_nv.ForkFrameFilter_swigregister(ForkFrameFilter)

class ForkFrameFilter3(FrameFilter):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, name, next=None, next2=None, next3=None):
        _valkka_nv.ForkFrameFilter3_swiginit(self, _valkka_nv.new_ForkFrameFilter3(name, next, next2, next3))
    __swig_destroy__ = _valkka_nv.delete_ForkFrameFilter3

# Register ForkFrameFilter3 in _valkka_nv:
_valkka_nv.ForkFrameFilter3_swigregister(ForkFrameFilter3)

class ForkFrameFilterN(FrameFilter):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, name):
        _valkka_nv.ForkFrameFilterN_swiginit(self, _valkka_nv.new_ForkFrameFilterN(name))
    __swig_destroy__ = _valkka_nv.delete_ForkFrameFilterN

    def connect(self, tag, filter):
        return _valkka_nv.ForkFrameFilterN_connect(self, tag, filter)

    def disconnect(self, tag):
        return _valkka_nv.ForkFrameFilterN_disconnect(self, tag)

# Register ForkFrameFilterN in _valkka_nv:
_valkka_nv.ForkFrameFilterN_swigregister(ForkFrameFilterN)

class SlotFrameFilter(FrameFilter):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, name, n_slot, next=None):
        _valkka_nv.SlotFrameFilter_swiginit(self, _valkka_nv.new_SlotFrameFilter(name, n_slot, next))
    __swig_destroy__ = _valkka_nv.delete_SlotFrameFilter

# Register SlotFrameFilter in _valkka_nv:
_valkka_nv.SlotFrameFilter_swigregister(SlotFrameFilter)

class PassSlotFrameFilter(FrameFilter):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, name, n_slot, next=None):
        _valkka_nv.PassSlotFrameFilter_swiginit(self, _valkka_nv.new_PassSlotFrameFilter(name, n_slot, next))
    __swig_destroy__ = _valkka_nv.delete_PassSlotFrameFilter

# Register PassSlotFrameFilter in _valkka_nv:
_valkka_nv.PassSlotFrameFilter_swigregister(PassSlotFrameFilter)

class DumpFrameFilter(FrameFilter):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, name, next=None):
        _valkka_nv.DumpFrameFilter_swiginit(self, _valkka_nv.new_DumpFrameFilter(name, next))
    __swig_destroy__ = _valkka_nv.delete_DumpFrameFilter

# Register DumpFrameFilter in _valkka_nv:
_valkka_nv.DumpFrameFilter_swigregister(DumpFrameFilter)

class CountFrameFilter(FrameFilter):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, name, next=None):
        _valkka_nv.CountFrameFilter_swiginit(self, _valkka_nv.new_CountFrameFilter(name, next))
    __swig_destroy__ = _valkka_nv.delete_CountFrameFilter

# Register CountFrameFilter in _valkka_nv:
_valkka_nv.CountFrameFilter_swigregister(CountFrameFilter)

class TimestampFrameFilter(FrameFilter):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        _valkka_nv.TimestampFrameFilter_swiginit(self, _valkka_nv.new_TimestampFrameFilter(*args))
    __swig_destroy__ = _valkka_nv.delete_TimestampFrameFilter

# Register TimestampFrameFilter in _valkka_nv:
_valkka_nv.TimestampFrameFilter_swigregister(TimestampFrameFilter)

class TimestampFrameFilter2(FrameFilter):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        _valkka_nv.TimestampFrameFilter2_swiginit(self, _valkka_nv.new_TimestampFrameFilter2(*args))
    __swig_destroy__ = _valkka_nv.delete_TimestampFrameFilter2

# Register TimestampFrameFilter2 in _valkka_nv:
_valkka_nv.TimestampFrameFilter2_swigregister(TimestampFrameFilter2)

class DummyTimestampFrameFilter(FrameFilter):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, name, next=None):
        _valkka_nv.DummyTimestampFrameFilter_swiginit(self, _valkka_nv.new_DummyTimestampFrameFilter(name, next))
    __swig_destroy__ = _valkka_nv.delete_DummyTimestampFrameFilter

# Register DummyTimestampFrameFilter in _valkka_nv:
_valkka_nv.DummyTimestampFrameFilter_swigregister(DummyTimestampFrameFilter)

class RepeatH264ParsFrameFilter(FrameFilter):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, name, next=None):
        _valkka_nv.RepeatH264ParsFrameFilter_swiginit(self, _valkka_nv.new_RepeatH264ParsFrameFilter(name, next))
    __swig_destroy__ = _valkka_nv.delete_RepeatH264ParsFrameFilter

# Register RepeatH264ParsFrameFilter in _valkka_nv:
_valkka_nv.RepeatH264ParsFrameFilter_swigregister(RepeatH264ParsFrameFilter)

class GateFrameFilter(FrameFilter):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, name, next=None):
        _valkka_nv.GateFrameFilter_swiginit(self, _valkka_nv.new_GateFrameFilter(name, next))

    def set(self):
        return _valkka_nv.GateFrameFilter_set(self)

    def unSet(self):
        return _valkka_nv.GateFrameFilter_unSet(self)

    def passConfigFrames(self):
        return _valkka_nv.GateFrameFilter_passConfigFrames(self)

    def noConfigFrames(self):
        return _valkka_nv.GateFrameFilter_noConfigFrames(self)
    __swig_destroy__ = _valkka_nv.delete_GateFrameFilter

# Register GateFrameFilter in _valkka_nv:
_valkka_nv.GateFrameFilter_swigregister(GateFrameFilter)

class SwitchFrameFilter(FrameFilter):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, name, next1=None, next2=None):
        _valkka_nv.SwitchFrameFilter_swiginit(self, _valkka_nv.new_SwitchFrameFilter(name, next1, next2))

    def set1(self):
        return _valkka_nv.SwitchFrameFilter_set1(self)

    def set2(self):
        return _valkka_nv.SwitchFrameFilter_set2(self)
    __swig_destroy__ = _valkka_nv.delete_SwitchFrameFilter

# Register SwitchFrameFilter in _valkka_nv:
_valkka_nv.SwitchFrameFilter_swigregister(SwitchFrameFilter)

class CachingGateFrameFilter(FrameFilter):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, name, next=None):
        _valkka_nv.CachingGateFrameFilter_swiginit(self, _valkka_nv.new_CachingGateFrameFilter(name, next))

    def set(self):
        return _valkka_nv.CachingGateFrameFilter_set(self)

    def unSet(self):
        return _valkka_nv.CachingGateFrameFilter_unSet(self)
    __swig_destroy__ = _valkka_nv.delete_CachingGateFrameFilter

# Register CachingGateFrameFilter in _valkka_nv:
_valkka_nv.CachingGateFrameFilter_swigregister(CachingGateFrameFilter)

class SetSlotFrameFilter(FrameFilter):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, name, next=None):
        _valkka_nv.SetSlotFrameFilter_swiginit(self, _valkka_nv.new_SetSlotFrameFilter(name, next))

    def setSlot(self, n=0):
        return _valkka_nv.SetSlotFrameFilter_setSlot(self, n)
    __swig_destroy__ = _valkka_nv.delete_SetSlotFrameFilter

# Register SetSlotFrameFilter in _valkka_nv:
_valkka_nv.SetSlotFrameFilter_swigregister(SetSlotFrameFilter)

class TimeIntervalFrameFilter(FrameFilter):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, name, mstimedelta, next=None):
        _valkka_nv.TimeIntervalFrameFilter_swiginit(self, _valkka_nv.new_TimeIntervalFrameFilter(name, mstimedelta, next))
    __swig_destroy__ = _valkka_nv.delete_TimeIntervalFrameFilter

# Register TimeIntervalFrameFilter in _valkka_nv:
_valkka_nv.TimeIntervalFrameFilter_swigregister(TimeIntervalFrameFilter)

class FifoFrameFilter(FrameFilter):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, name, framefifo):
        _valkka_nv.FifoFrameFilter_swiginit(self, _valkka_nv.new_FifoFrameFilter(name, framefifo))
    __swig_destroy__ = _valkka_nv.delete_FifoFrameFilter

# Register FifoFrameFilter in _valkka_nv:
_valkka_nv.FifoFrameFilter_swigregister(FifoFrameFilter)

class BlockingFifoFrameFilter(FrameFilter):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, name, framefifo):
        _valkka_nv.BlockingFifoFrameFilter_swiginit(self, _valkka_nv.new_BlockingFifoFrameFilter(name, framefifo))
    __swig_destroy__ = _valkka_nv.delete_BlockingFifoFrameFilter

# Register BlockingFifoFrameFilter in _valkka_nv:
_valkka_nv.BlockingFifoFrameFilter_swigregister(BlockingFifoFrameFilter)

class SwScaleFrameFilter(FrameFilter):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, name, target_width, target_height, next=None):
        _valkka_nv.SwScaleFrameFilter_swiginit(self, _valkka_nv.new_SwScaleFrameFilter(name, target_width, target_height, next))
    __swig_destroy__ = _valkka_nv.delete_SwScaleFrameFilter

# Register SwScaleFrameFilter in _valkka_nv:
_valkka_nv.SwScaleFrameFilter_swigregister(SwScaleFrameFilter)

class Thread(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __swig_destroy__ = _valkka_nv.delete_Thread

    def setAffinity(self, i):
        return _valkka_nv.Thread_setAffinity(self, i)

    def startCall(self):
        return _valkka_nv.Thread_startCall(self)

    def stopCall(self):
        return _valkka_nv.Thread_stopCall(self)

    def requestStopCall(self):
        return _valkka_nv.Thread_requestStopCall(self)

    def waitStopCall(self):
        return _valkka_nv.Thread_waitStopCall(self)

    def waitReady(self):
        return _valkka_nv.Thread_waitReady(self)

# Register Thread in _valkka_nv:
_valkka_nv.Thread_swigregister(Thread)

class FrameFifoContext(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        _valkka_nv.FrameFifoContext_swiginit(self, _valkka_nv.new_FrameFifoContext(*args))
    n_basic = property(_valkka_nv.FrameFifoContext_n_basic_get, _valkka_nv.FrameFifoContext_n_basic_set)
    n_avpkt = property(_valkka_nv.FrameFifoContext_n_avpkt_get, _valkka_nv.FrameFifoContext_n_avpkt_set)
    n_avframe = property(_valkka_nv.FrameFifoContext_n_avframe_get, _valkka_nv.FrameFifoContext_n_avframe_set)
    n_yuvpbo = property(_valkka_nv.FrameFifoContext_n_yuvpbo_get, _valkka_nv.FrameFifoContext_n_yuvpbo_set)
    n_setup = property(_valkka_nv.FrameFifoContext_n_setup_get, _valkka_nv.FrameFifoContext_n_setup_set)
    n_signal = property(_valkka_nv.FrameFifoContext_n_signal_get, _valkka_nv.FrameFifoContext_n_signal_set)
    n_marker = property(_valkka_nv.FrameFifoContext_n_marker_get, _valkka_nv.FrameFifoContext_n_marker_set)
    flush_when_full = property(_valkka_nv.FrameFifoContext_flush_when_full_get, _valkka_nv.FrameFifoContext_flush_when_full_set)
    __swig_destroy__ = _valkka_nv.delete_FrameFifoContext

# Register FrameFifoContext in _valkka_nv:
_valkka_nv.FrameFifoContext_swigregister(FrameFifoContext)

class DecoderThread(Thread):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        _valkka_nv.DecoderThread_swiginit(self, _valkka_nv.new_DecoderThread(*args))
    __swig_destroy__ = _valkka_nv.delete_DecoderThread

    def setTimeCorrection(self, val):
        return _valkka_nv.DecoderThread_setTimeCorrection(self, val)

    def getFrameFilter(self):
        return _valkka_nv.DecoderThread_getFrameFilter(self)

    def getBlockingFrameFilter(self):
        return _valkka_nv.DecoderThread_getBlockingFrameFilter(self)

    def setTimeTolerance(self, mstol):
        return _valkka_nv.DecoderThread_setTimeTolerance(self, mstol)

    def setNumberOfThreads(self, n_threads):
        return _valkka_nv.DecoderThread_setNumberOfThreads(self, n_threads)

    def decodingOnCall(self):
        return _valkka_nv.DecoderThread_decodingOnCall(self)

    def decodingOffCall(self):
        return _valkka_nv.DecoderThread_decodingOffCall(self)

    def requestStopCall(self):
        return _valkka_nv.DecoderThread_requestStopCall(self)

# Register DecoderThread in _valkka_nv:
_valkka_nv.DecoderThread_swigregister(DecoderThread)


def NVcuInit():
    return _valkka_nv.NVcuInit()

def NVgetDevices():
    return _valkka_nv.NVgetDevices()
class NVThread(DecoderThread):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        _valkka_nv.NVThread_swiginit(self, _valkka_nv.new_NVThread(*args))
    __swig_destroy__ = _valkka_nv.delete_NVThread

# Register NVThread in _valkka_nv:
_valkka_nv.NVThread_swigregister(NVThread)



